<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.baoge.dao.UserDao">
   <!-- <resultMap id="userinfoAndRole" type="com.baoge.entity.User">
        <id property="id" column="id"/>
        <result property="username" column="username"/>
        <result property="password" column="password"/>
        <result property="name" column="name"/>
        <result property="sex" column="sex"/>
        <result property="email" column="email"/>
        <result property="phone" column="phone"/>
        <result property="status" column="status"/>
        <collection property="roles" ofType="com.baoge.entity.Role">
            <id property="id" column="rid"/>
            <result property="roleName" column="role_name" />
            <result property="roleDesc" column="role_desc" />
        </collection>
    </resultMap>-->
    <!--查询用户名和密码-->
    <select id="findByUsernameAndPassword" resultType="com.baoge.entity.User">
        select * from user u
        where username = #{username} and password = #{password};
    </select>
    <select id="getRoleidsById" resultType="java.lang.String">
    select role_id from user_role where user_id=#{id}
    </select>
    <!--根据用户id查询用户-->
    <select id="getUserById" resultType="com.baoge.entity.User">
        SELECT id,username,status,sex,phone,name,email FROM user WHERE id=#{id}
    </select>
    <!--查询所有用户-->
    <select id="listUser" resultType="com.baoge.entity.User">
        SELECT id,username,name,sex,status,phone,email FROM user
    </select>
    <!--根据用户名或者性别，状态查询用户-->
    <select id="searchUser" resultType="com.baoge.entity.User">
        SELECT id,username,name,sex,status,phone FROM user
        where 1=1
        <if test="username != null and username != ''">
            and username like '%' #{username} '%'
        </if>
        <if test="sex !=null and sex !=''">
            and sex = #{sex}
        </if>
        <if test="status !=null and status !=''">
            and status = #{status}
        </if>

    </select>

    <!--修改用户-->
    <update id="editUser" parameterType="com.baoge.entity.User">
        UPDATE user
        <set>
            <if test="username != null">username=#{username},</if>
            <if test="password != null and password !=''">password=#{password},</if>
            <if test="name != null">name=#{name},</if>
            <if test="sex != null">sex=#{sex},</if>
            <if test="status != null">status=#{status},</if>
            <if test="phone != null">phone=#{phone},</if>
            <if test="email != null">email=#{email}</if>
        </set>
        WHERE id=#{id}
    </update>

    <!--删除用户下所有的角色-->
    <delete id="deleteUserRole">
        DELETE FROM user_role WHERE user_id=#{userId}
    </delete>
    <delete id="deleteCardImageByUserId">
         DELETE FROM cardimage WHERE user_id=#{id}
    </delete>
    <delete id="deleteResumeByUserId">
         DELETE FROM resume WHERE userid=#{id}
    </delete>
    <delete id="deleteJobByUserId">
          DELETE FROM job WHERE user_id=#{id}
    </delete>
    <delete id="deleteApplicationByUserId">
          DELETE FROM application WHERE user_id=#{id} or recruiter_id=#{id}
    </delete>
    <!--添加-->
<!--    <selectKey resultType="java.lang.Long" order="AFTER" keyProperty="id">
        SELECT LAST_INSERT_ID() AS id
    </selectKey>-->
    <insert id="addUser" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO user(username,password,name,sex,status,phone,email)
        VALUES (#{username}, #{password},#{name},#{sex},#{status},#{phone},#{email})
    </insert>

    <!--添加用户角色-->
    <insert id="addUserRole">
        INSERT INTO user_role(user_id,role_id) VALUES (#{userId},#{roleId})
    </insert>
    <!--根据id删除用户*-->
    <delete id="deleteUser">
        DELETE FROM user WHERE id=#{id}
    </delete>
    <!--批量删除用户
    delete from user where 1>2

         or id in  ${ids}
    -->
    <delete id="deleteUsers" parameterType="java.util.List">
        delete from user
        where 1>2 or id in
        <foreach collection="list"  item="del_ids" open="(" separator="," close=")"  >
        #{del_ids}
        </foreach>
    </delete>

    <delete id="deleteUserRoles" parameterType="java.util.List">
        delete from user_role
        where 1>2 or user_id in
        <foreach collection="list"  item="del_ids" open="(" separator="," close=")"  >
        #{del_ids}
        </foreach>
    </delete>

    <select id="searchUserByUserName" resultType="java.lang.Integer">
        select count(*) from user where username=#{username}
    </select>

    <select id="checkUserPasswordById" resultType="com.baoge.entity.User">
        select * from user
        where id = #{id} and password = #{password};
    </select>

    <update id="editUserpassword">
        UPDATE user set password=#{password} where id=#{id}
    </update>
</mapper>